heapq는 다익스트라 최단 경로 알고리즘을 포함해 다양한 알고리즘에서 우선순위 큐 기능을 구현하고자 할 때 사용된다.
heapq외에도 PriorityQueue 라이브러리를 사용할 수 있지만, 코딩테스트 환경에서는 보통 heapq가 더 빠르게 동작하므로 heapq를 주로 이용한다.

파이썬의 힙은 최소 힙(Min Heap)으로 구성되어 있으므로 단순히 원소를 힙에 전부 넣었다가 빼는 것만으로도 시간 복잡도가 O(NlogN)에 오름차순 정렬이 완료된다.

파이썬에서는 최대 힙(Max Heap)을 제공하지 않으므로 heapq 라이브러리를 이용해 최대 힙을 구현할 때는 원소의 부호를 임시로 변경하는 방식을 사용한다.
힙에 원소를 삽입하기 전에 잠시 부호를 반대로 바꾸었다가, 힙에서 원소를 꺼낸 뒤에 다시 원소의 부호를 바꾸면 된다.
최대 힙을 구현해서 내림차순 힙 정렬을 구현하는 예시
import heapq

def heapsort(iterable):
  h = []
  result = []

  #모든 원소를 차례대로 힙에 삽입
  for value in iterable:
    heapq.heappush(h, -value)

  #힙에 삽입된 모든 원소를 차례대로 꺼내서 담기
  for i in range(len(h)):
    result.append(-heapq.heappop(h))
  return result

result = heapsort([1, 3, 5, 7, 9, 2, 4, 6, 8, 0])
print(result)

결과 : [9, 8, 7, 6, 5, 4, 3, 2, 1, 0])
